// –ú–∞—Å—Å–∏–≤ —Ç—Ä–µ–∫–æ–≤ –∏–∑ Persona
const tracks = [
    {
        title: "Burn My Dread",
        url: "music/01. Burn My Dread.mp3"
    },
    {
        title: "Wake Up, Get Up, Get Out There",
        url: "music/5-20. Wake Up, Get Up, Get Out There -Revelations Arrange-.mp3"
    }
];

let currentTrackIndex = -1;
let isMusicPlaying = false;

const musicButton = document.querySelector('.music-button');
const musicIcon = document.querySelector('.music-icon');
const currentTrackElement = document.querySelector('.current-track');
const bgMusic = document.getElementById('bgMusic');
const volumeSlider = document.getElementById('volumeSlider');

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π –≥—Ä–æ–º–∫–æ—Å—Ç–∏
bgMusic.volume = volumeSlider.value / 100;

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏
volumeSlider.addEventListener('input', (e) => {
    const volume = e.target.value / 100;
    bgMusic.volume = volume;
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
    const volumeIcon = document.querySelector('.volume-icon');
    if (volume === 0) {
        volumeIcon.textContent = 'üîá';
    } else if (volume < 0.5) {
        volumeIcon.textContent = 'üîâ';
    } else {
        volumeIcon.textContent = 'üîä';
    }
});

// –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ
function preloadAudio(url) {
    const audio = new Audio();
    audio.src = url;
}

// –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ç—Ä–µ–∫–∏
tracks.forEach(track => preloadAudio(track.url));

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞
function updateCurrentTrackDisplay() {
    if (currentTrackIndex !== -1 && !bgMusic.paused) {
        currentTrackElement.textContent = `–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: ${tracks[currentTrackIndex].title}`;
        currentTrackElement.classList.add('visible');
    } else {
        currentTrackElement.classList.remove('visible');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ç—Ä–µ–∫–∞
function playRandomTrack() {
    const randomIndex = Math.floor(Math.random() * tracks.length);
    currentTrackIndex = randomIndex;
    
    bgMusic.onerror = function() {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ:', bgMusic.error);
        currentTrackElement.textContent = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ';
        currentTrackElement.classList.add('visible');
    };
    
    bgMusic.src = tracks[randomIndex].url;
    bgMusic.volume = 0.5;
    
    bgMusic.play().catch(error => {
        console.error('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
        currentTrackElement.textContent = '–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è';
        currentTrackElement.classList.add('visible');
    });
    
    updateCurrentTrackDisplay();
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç—Ä–µ–∫–∞
bgMusic.addEventListener('ended', () => {
    currentTrackIndex = (currentTrackIndex + 1) % tracks.length;
    bgMusic.src = tracks[currentTrackIndex].url;
    bgMusic.play();
    updateCurrentTrackDisplay();
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –º—É–∑—ã–∫–∏
musicButton.addEventListener('click', () => {
    if (bgMusic.paused) {
        if (currentTrackIndex === -1) {
            playRandomTrack();
        } else {
            bgMusic.play().catch(error => {
                console.error('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
            });
        }
        musicButton.classList.add('playing');
    } else {
        bgMusic.pause();
        musicButton.classList.remove('playing');
    }
    updateCurrentTrackDisplay();
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–≤—ã–π —Ç—Ä–µ–∫ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∫–ª–∏–∫–µ –Ω–∞ –∏–≥—Ä–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å
document.querySelector('.click-area').addEventListener('click', function firstClick() {
    if (currentTrackIndex === -1) {
        currentTrackIndex = 0;
        bgMusic.src = tracks[currentTrackIndex].url;
        bgMusic.load();
        bgMusic.pause();
    }
    this.removeEventListener('click', firstClick);
});

let score = 0;
let clicksPerSecond = 0;
let autoClickerCount = 0;
let multiplier = 1;
let multiplierLevel = 0;
let lastClickTime = Date.now();

// –ë–∞–∑–æ–≤—ã–µ —Ü–µ–Ω—ã —É–ª—É—á—à–µ–Ω–∏–π
let autoClickerBasePrice = 100;
let multiplierBasePrice = 200;

// –¢–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã —É–ª—É—á—à–µ–Ω–∏–π
let currentAutoClickerPrice = autoClickerBasePrice;
let currentMultiplierPrice = multiplierBasePrice;

// –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Ä–æ—Å—Ç–∞ —Ü–µ–Ω—ã (1.15 - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–ª—è –º–Ω–æ–≥–∏—Ö –∫–ª–∏–∫–µ—Ä–æ–≤)
const priceGrowthRate = 1.15;

const scoreElement = document.getElementById('score');
const clicksPerSecondElement = document.getElementById('clicks-per-second');
const clickArea = document.getElementById('clickArea');
const autoClickerButton = document.getElementById('autoClicker');
const multiplierButton = document.getElementById('multiplier');

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –æ—á–∫–æ–≤
function createScorePopup(amount) {
    const popup = document.createElement('div');
    popup.textContent = `+${Math.floor(amount * multiplier)}`;
    popup.style.position = 'absolute';
    popup.style.color = '#ff0000';
    popup.style.fontSize = '24px';
    popup.style.fontWeight = 'bold';
    popup.style.pointerEvents = 'none';
    popup.style.userSelect = 'none';
    popup.style.webkitUserSelect = 'none';
    popup.style.msUserSelect = 'none';
    popup.style.mozUserSelect = 'none';
    popup.style.textShadow = '2px 2px 4px rgba(0,0,0,0.5)';
    popup.style.zIndex = '1000';
    
    // –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤–æ–∫—Ä—É–≥ –º–µ—Å—Ç–∞ –∫–ª–∏–∫–∞
    const x = Math.random() * 100 - 50;
    const y = Math.random() * 100 - 50;
    
    popup.style.left = `calc(50% + ${x}px)`;
    popup.style.top = `calc(50% + ${y}px)`;
    
    clickArea.appendChild(popup);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –≤–≤–µ—Ä—Ö –∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
    popup.animate([
        { transform: 'translateY(0) scale(1)', opacity: 1 },
        { transform: 'translateY(-100px) scale(1.5)', opacity: 0 }
    ], {
        duration: 1000,
        easing: 'cubic-bezier(0.4, 0, 0.2, 1)'
    }).onfinish = () => popup.remove();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–æ–∫
function updateButtonTexts() {
    autoClickerButton.textContent = `–ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä (${Math.floor(currentAutoClickerPrice)} –æ—á–∫–æ–≤)`;
    multiplierButton.textContent = `–ú–Ω–æ–∂–∏—Ç–µ–ª—å +0.25 (${Math.floor(currentMultiplierPrice)} –æ—á–∫–æ–≤)`;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –ú–æ—Ä–≥–∞–Ω–µ
clickArea.addEventListener('click', () => {
    const currentTime = Date.now();
    const timeDiff = (currentTime - lastClickTime) / 1000;
    
    if (timeDiff < 1) {
        clicksPerSecond = 1 / timeDiff;
    }
    
    lastClickTime = currentTime;
    createScorePopup(1);
    updateScore(1);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø—É–ª—å—Å–∞—Ü–∏–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ
    clickArea.style.transform = 'scale(0.95)';
    setTimeout(() => {
        clickArea.style.transform = '';
    }, 100);
});

// –ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä
function autoClick() {
    if (autoClickerCount > 0) {
        createScorePopup(autoClickerCount);
        updateScore(autoClickerCount);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞
function updateScore(amount) {
    const oldScore = score;
    score += amount * multiplier;
    scoreElement.textContent = Math.floor(score);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞
    if (score > oldScore) {
        scoreElement.classList.add('score-popup');
        setTimeout(() => {
            scoreElement.classList.remove('score-popup');
        }, 300);
    }
    
    clicksPerSecondElement.textContent = (clicksPerSecond + autoClickerCount).toFixed(1);
    updateButtons();
}

// –ü–æ–∫—É–ø–∫–∞ –∞–≤—Ç–æ–∫–ª–∏–∫–µ—Ä–∞
autoClickerButton.addEventListener('click', () => {
    if (score >= currentAutoClickerPrice) {
        score -= currentAutoClickerPrice;
        autoClickerCount++;
        currentAutoClickerPrice = Math.floor(autoClickerBasePrice * Math.pow(priceGrowthRate, autoClickerCount));
        updateScore(0);
        updateButtonTexts();
        if (autoClickerCount === 1) {
            setInterval(autoClick, 1000);
        }
    }
});

// –ü–æ–∫—É–ø–∫–∞ –º–Ω–æ–∂–∏—Ç–µ–ª—è
multiplierButton.addEventListener('click', () => {
    if (score >= currentMultiplierPrice) {
        score -= currentMultiplierPrice;
        multiplierLevel++;
        multiplier = 1 + (multiplierLevel * 0.25);
        currentMultiplierPrice = Math.floor(multiplierBasePrice * Math.pow(priceGrowthRate, multiplierLevel));
        updateScore(0);
        updateButtonTexts();
    }
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫
function updateButtons() {
    autoClickerButton.disabled = score < currentAutoClickerPrice;
    multiplierButton.disabled = score < currentMultiplierPrice;
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
setInterval(() => {
    clicksPerSecond = 0;
    clicksPerSecondElement.textContent = autoClickerCount.toFixed(1);
    updateButtons();
}, 1000);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–æ–∫
updateButtonTexts();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Å—Ç–∏—Ü
function createParticles() {
    const container = document.querySelector('.particles-container');
    const particleCount = 30;

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    container.innerHTML = '';

    for (let i = 0; i < particleCount; i++) {
        const particle = document.createElement('div');
        particle.className = 'particle';
        
        // –°–ª—É—á–∞–π–Ω–æ–µ –Ω–∞—á–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        particle.style.left = Math.random() * 100 + '%';
        particle.style.top = Math.random() * 100 + '%';
        
        // –°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
        particle.style.animationDelay = Math.random() * 10 + 's';
        
        container.appendChild(particle);
        
        // –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —á–∞—Å—Ç–∏—Ü—É –∫–æ–≥–¥–∞ –∞–Ω–∏–º–∞—Ü–∏—è –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è
        particle.addEventListener('animationend', () => {
            particle.style.top = '100%';
            particle.style.left = Math.random() * 100 + '%';
            void particle.offsetWidth; // –°–±—Ä–æ—Å –∞–Ω–∏–º–∞—Ü–∏–∏
            particle.style.top = Math.random() * 100 + '%';
        });
    }
}

// –°–æ–∑–¥–∞–µ–º —á–∞—Å—Ç–∏—Ü—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', createParticles); 